/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 public/terminator_cloak.gltf
*/
import React, { useEffect, useState } from 'react';
import { useGLTF } from '@react-three/drei';

export function ModelObject(props: { url: string }) {
  const { url } = props;
  //@ts-ignore
  const { nodes, materials } = useGLTF(url);
  const [newNodeArr, setNewNodeArr] = useState([]);

  useEffect(() => {
    const nodeArr: any = Object.keys(nodes);
    setNewNodeArr(nodeArr);
  }, [nodes]);
  return (
    <group {...props}>
      {newNodeArr.map((node, index) => {
        console.log(materials);
        if (!nodes[node] || !nodes[node].geometry) return null;
        return (
          <mesh
            key="mesh"
            geometry={nodes[node].geometry}
            castShadow={true}
            receiveShadow={true}
          >
            <meshStandardMaterial map={nodes[node].material.map} />
          </mesh>
        );
      })}
    </group>
  );
}
